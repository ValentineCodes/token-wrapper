{
  "address": "0xeF20ad6245cf8E854de8952BbB04bf8594914AAf",
  "abi": [
    {
      "inputs": [],
      "name": "L2TokenVault__InsufficientAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "L2TokenVault__InsufficientFees",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "L2TokenVault__InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "L2TokenVault__NonceAlreadyProcessed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "L2TokenVault__TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "L2TokenVault__ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "processedNonce",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "otherChainNonce",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd0fbee23b1a9639969b49be185566e3b4df864d9b475aa88ac176ab5c1bb15ef",
  "receipt": {
    "to": null,
    "from": "0x7a82bbfD10E3Ce5817dEcC0ee870e17D6853D901",
    "contractAddress": "0xeF20ad6245cf8E854de8952BbB04bf8594914AAf",
    "transactionIndex": 14,
    "gasUsed": "857505",
    "logsBloom": "0x
    "blockHash": "0xc0728c0ee839f8d69881c569cb053838c5efc2f93325b836e081442c6c890963",
    "transactionHash": "0xd0fbee23b1a9639969b49be185566e3b4df864d9b475aa88ac176ab5c1bb15ef",
    "logs": [
      {
        "transactionIndex": 14,
        "blockNumber": 36184359,
        "transactionHash": "0xd0fbee23b1a9639969b49be185566e3b4df864d9b475aa88ac176ab5c1bb15ef",
        "address": "0xeF20ad6245cf8E854de8952BbB04bf8594914AAf",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007a82bbfd10e3ce5817decc0ee870e17d6853d901"
        ],
        "data": "0x",
        "logIndex": 118,
        "blockHash": "0xc0728c0ee839f8d69881c569cb053838c5efc2f93325b836e081442c6c890963"
      },
      {
        "transactionIndex": 14,
        "blockNumber": 36184359,
        "transactionHash": "0xd0fbee23b1a9639969b49be185566e3b4df864d9b475aa88ac176ab5c1bb15ef",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000007a82bbfd10e3ce5817decc0ee870e17d6853d901",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000491d829608f000000000000000000000000000000000000000000000000000c45aee46ad1ee26000000000000000000000000000000000000000000000eac0596208ff282182a0000000000000000000000000000000000000000000000000c411d0c41715f26000000000000000000000000000000000000000000000eac059ab2681be2a72a",
        "logIndex": 119,
        "blockHash": "0xc0728c0ee839f8d69881c569cb053838c5efc2f93325b836e081442c6c890963"
      }
    ],
    "blockNumber": 36184359,
    "cumulativeGasUsed": "4108779",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "90e0f239ce5610f34d3484a800091e16",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"L2TokenVault__InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__InsufficientFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__NonceAlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"processedNonce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"otherChainNonce\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/layer-2/L2TokenVault.sol\":\"L2TokenVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/layer-2/L2TokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nerror L2TokenVault__TransferFailed();\\nerror L2TokenVault__ZeroAddress();\\nerror L2TokenVault__InsufficientFunds();\\nerror L2TokenVault__InsufficientAmount();\\nerror L2TokenVault__InsufficientFees();\\nerror L2TokenVault__NonceAlreadyProcessed();\\n\\ncontract L2TokenVault is Ownable {\\n  event Transfer(address to, uint256 amount);\\n  event Deposit(address depositor, uint256 amount, uint256 nonce);\\n\\n  uint256 private constant DEPOSIT_FEE = 0.01 ether;\\n  uint256 private s_fees;\\n  uint256 public nonce;\\n\\n  mapping(address owner => uint256 amount) private s_balances;\\n  mapping(uint256 nonce => bool) public processedNonce;\\n\\n  function transfer(address to, uint256 amount, uint256 otherChainNonce) public onlyOwner {\\n    if (to == address(0)) revert L2TokenVault__ZeroAddress();\\n\\n    uint256 toBalance = s_balances[to];\\n\\n    if (toBalance < amount) revert L2TokenVault__InsufficientFunds();\\n\\n    if (processedNonce[otherChainNonce]) revert L2TokenVault__NonceAlreadyProcessed();\\n\\n    processedNonce[otherChainNonce] = true;\\n\\n    unchecked {\\n      s_balances[to] = toBalance - amount;\\n    }\\n\\n    (bool success, ) = payable(to).call{value: amount}(\\\"\\\");\\n    if (!success) revert L2TokenVault__TransferFailed();\\n\\n    emit Transfer(to, amount);\\n  }\\n\\n  function withdrawFees() public {\\n    uint256 fees = s_fees;\\n\\n    if (fees == 0) revert L2TokenVault__InsufficientFees();\\n\\n    s_fees = 0;\\n\\n    address owner = owner();\\n\\n    (bool success, ) = owner.call{value: fees}(\\\"\\\");\\n    if (!success) revert L2TokenVault__TransferFailed();\\n\\n    emit Transfer(owner, fees);\\n  }\\n\\n  function balanceOf(address owner) public view returns (uint256) {\\n    return s_balances[owner];\\n  }\\n\\n  function getFees() public view returns (uint256) {\\n    return s_fees;\\n  }\\n\\n  receive() external payable {\\n    if (msg.value <= DEPOSIT_FEE) revert L2TokenVault__InsufficientAmount();\\n\\n    uint256 amount = msg.value - DEPOSIT_FEE;\\n\\n    s_fees += DEPOSIT_FEE;\\n    s_balances[msg.sender] += amount;\\n\\n    nonce++;\\n\\n    emit Deposit(msg.sender, amount, nonce);\\n  }\\n}\\n\",\"keccak256\":\"0x8320b0fc93af510d8a7e74ce4f4393675efe997516bb7f39a1046482bc6b9caa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e1f8061010d6000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b1461024c578063aa42131214610277578063affed0e0146102b4578063db8d55f1146102df578063f2fde38b1461030a576101b3565b8063095bcdb6146101b8578063476343ee146101e157806370a08231146101f8578063715018a614610235576101b3565b366101b357662386f26fc1000034116100cf576040517f07b77cf400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000662386f26fc10000346100e491906109be565b9050662386f26fc10000600160008282546100ff91906109f2565b9250508190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461015591906109f2565b925050819055506002600081548092919061016f90610a26565b91905055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1533826002546040516101a993929190610abe565b60405180910390a1005b600080fd5b3480156101c457600080fd5b506101df60048036038101906101da9190610b52565b610333565b005b3480156101ed57600080fd5b506101f66105cc565b005b34801561020457600080fd5b5061021f600480360381019061021a9190610ba5565b610702565b60405161022c9190610bd2565b60405180910390f35b34801561024157600080fd5b5061024a61074b565b005b34801561025857600080fd5b5061026161075f565b60405161026e9190610bed565b60405180910390f35b34801561028357600080fd5b5061029e60048036038101906102999190610c08565b610788565b6040516102ab9190610c50565b60405180910390f35b3480156102c057600080fd5b506102c96107a8565b6040516102d69190610bd2565b60405180910390f35b3480156102eb57600080fd5b506102f46107ae565b6040516103019190610bd2565b60405180910390f35b34801561031657600080fd5b50610331600480360381019061032c9190610ba5565b6107b8565b005b61033b61083b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103a1576040517febca8e3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561041f576040517f2e98d2c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004600083815260200190815260200160002060009054906101000a900460ff1615610477576040517f31f65bbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016004600084815260200190815260200160002060006101000a81548160ff021916908315150217905550828103600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008473ffffffffffffffffffffffffffffffffffffffff168460405161050f90610c9c565b60006040518083038185875af1925050503d806000811461054c576040519150601f19603f3d011682016040523d82523d6000602084013e610551565b606091505b505090508061058c576040517ffd29b19b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de285856040516105bd929190610cb1565b60405180910390a15050505050565b600060015490506000810361060d576040517fd728bc6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600181905550600061061f61075f565b905060008173ffffffffffffffffffffffffffffffffffffffff168360405161064790610c9c565b60006040518083038185875af1925050503d8060008114610684576040519150601f19603f3d011682016040523d82523d6000602084013e610689565b606091505b50509050806106c4576040517ffd29b19b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de282846040516106f5929190610cb1565b60405180910390a1505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61075361083b565b61075d60006108b9565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915054906101000a900460ff1681565b60025481565b6000600154905090565b6107c061083b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610d5d565b60405180910390fd5b610838816108b9565b50565b61084361097d565b73ffffffffffffffffffffffffffffffffffffffff1661086161075f565b73ffffffffffffffffffffffffffffffffffffffff16146108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae90610dc9565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c982610985565b91506109d483610985565b92508282039050818111156109ec576109eb61098f565b5b92915050565b60006109fd82610985565b9150610a0883610985565b9250828201905080821115610a2057610a1f61098f565b5b92915050565b6000610a3182610985565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a6357610a6261098f565b5b600182019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9982610a6e565b9050919050565b610aa981610a8e565b82525050565b610ab881610985565b82525050565b6000606082019050610ad36000830186610aa0565b610ae06020830185610aaf565b610aed6040830184610aaf565b949350505050565b600080fd5b610b0381610a8e565b8114610b0e57600080fd5b50565b600081359050610b2081610afa565b92915050565b610b2f81610985565b8114610b3a57600080fd5b50565b600081359050610b4c81610b26565b92915050565b600080600060608486031215610b6b57610b6a610af5565b5b6000610b7986828701610b11565b9350506020610b8a86828701610b3d565b9250506040610b9b86828701610b3d565b9150509250925092565b600060208284031215610bbb57610bba610af5565b5b6000610bc984828501610b11565b91505092915050565b6000602082019050610be76000830184610aaf565b92915050565b6000602082019050610c026000830184610aa0565b92915050565b600060208284031215610c1e57610c1d610af5565b5b6000610c2c84828501610b3d565b91505092915050565b60008115159050919050565b610c4a81610c35565b82525050565b6000602082019050610c656000830184610c41565b92915050565b600081905092915050565b50565b6000610c86600083610c6b565b9150610c9182610c76565b600082019050919050565b6000610ca782610c79565b9150819050919050565b6000604082019050610cc66000830185610aa0565b610cd36020830184610aaf565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d47602683610cda565b9150610d5282610ceb565b604082019050919050565b60006020820190508181036000830152610d7681610d3a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610db3602083610cda565b9150610dbe82610d7d565b602082019050919050565b60006020820190508181036000830152610de281610da6565b905091905056fea2646970667358221220c721d067cf7a57c649178f2353b3d9b86bb115f11e5892c1d40ee85c147ae6d164736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b1461024c578063aa42131214610277578063affed0e0146102b4578063db8d55f1146102df578063f2fde38b1461030a576101b3565b8063095bcdb6146101b8578063476343ee146101e157806370a08231146101f8578063715018a614610235576101b3565b366101b357662386f26fc1000034116100cf576040517f07b77cf400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000662386f26fc10000346100e491906109be565b9050662386f26fc10000600160008282546100ff91906109f2565b9250508190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461015591906109f2565b925050819055506002600081548092919061016f90610a26565b91905055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1533826002546040516101a993929190610abe565b60405180910390a1005b600080fd5b3480156101c457600080fd5b506101df60048036038101906101da9190610b52565b610333565b005b3480156101ed57600080fd5b506101f66105cc565b005b34801561020457600080fd5b5061021f600480360381019061021a9190610ba5565b610702565b60405161022c9190610bd2565b60405180910390f35b34801561024157600080fd5b5061024a61074b565b005b34801561025857600080fd5b5061026161075f565b60405161026e9190610bed565b60405180910390f35b34801561028357600080fd5b5061029e60048036038101906102999190610c08565b610788565b6040516102ab9190610c50565b60405180910390f35b3480156102c057600080fd5b506102c96107a8565b6040516102d69190610bd2565b60405180910390f35b3480156102eb57600080fd5b506102f46107ae565b6040516103019190610bd2565b60405180910390f35b34801561031657600080fd5b50610331600480360381019061032c9190610ba5565b6107b8565b005b61033b61083b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103a1576040517febca8e3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561041f576040517f2e98d2c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004600083815260200190815260200160002060009054906101000a900460ff1615610477576040517f31f65bbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016004600084815260200190815260200160002060006101000a81548160ff021916908315150217905550828103600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008473ffffffffffffffffffffffffffffffffffffffff168460405161050f90610c9c565b60006040518083038185875af1925050503d806000811461054c576040519150601f19603f3d011682016040523d82523d6000602084013e610551565b606091505b505090508061058c576040517ffd29b19b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de285856040516105bd929190610cb1565b60405180910390a15050505050565b600060015490506000810361060d576040517fd728bc6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600181905550600061061f61075f565b905060008173ffffffffffffffffffffffffffffffffffffffff168360405161064790610c9c565b60006040518083038185875af1925050503d8060008114610684576040519150601f19603f3d011682016040523d82523d6000602084013e610689565b606091505b50509050806106c4576040517ffd29b19b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de282846040516106f5929190610cb1565b60405180910390a1505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61075361083b565b61075d60006108b9565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915054906101000a900460ff1681565b60025481565b6000600154905090565b6107c061083b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610d5d565b60405180910390fd5b610838816108b9565b50565b61084361097d565b73ffffffffffffffffffffffffffffffffffffffff1661086161075f565b73ffffffffffffffffffffffffffffffffffffffff16146108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae90610dc9565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c982610985565b91506109d483610985565b92508282039050818111156109ec576109eb61098f565b5b92915050565b60006109fd82610985565b9150610a0883610985565b9250828201905080821115610a2057610a1f61098f565b5b92915050565b6000610a3182610985565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a6357610a6261098f565b5b600182019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9982610a6e565b9050919050565b610aa981610a8e565b82525050565b610ab881610985565b82525050565b6000606082019050610ad36000830186610aa0565b610ae06020830185610aaf565b610aed6040830184610aaf565b949350505050565b600080fd5b610b0381610a8e565b8114610b0e57600080fd5b50565b600081359050610b2081610afa565b92915050565b610b2f81610985565b8114610b3a57600080fd5b50565b600081359050610b4c81610b26565b92915050565b600080600060608486031215610b6b57610b6a610af5565b5b6000610b7986828701610b11565b9350506020610b8a86828701610b3d565b9250506040610b9b86828701610b3d565b9150509250925092565b600060208284031215610bbb57610bba610af5565b5b6000610bc984828501610b11565b91505092915050565b6000602082019050610be76000830184610aaf565b92915050565b6000602082019050610c026000830184610aa0565b92915050565b600060208284031215610c1e57610c1d610af5565b5b6000610c2c84828501610b3d565b91505092915050565b60008115159050919050565b610c4a81610c35565b82525050565b6000602082019050610c656000830184610c41565b92915050565b600081905092915050565b50565b6000610c86600083610c6b565b9150610c9182610c76565b600082019050919050565b6000610ca782610c79565b9150819050919050565b6000604082019050610cc66000830185610aa0565b610cd36020830184610aaf565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d47602683610cda565b9150610d5282610ceb565b604082019050919050565b60006020820190508181036000830152610d7681610d3a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610db3602083610cda565b9150610dbe82610d7d565b602082019050919050565b60006020820190508181036000830152610de281610da6565b905091905056fea2646970667358221220c721d067cf7a57c649178f2353b3d9b86bb115f11e5892c1d40ee85c147ae6d164736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 950,
        "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
        "label": "s_fees",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 952,
        "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
        "label": "nonce",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 956,
        "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
        "label": "s_balances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 960,
        "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
        "label": "processedNonce",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}