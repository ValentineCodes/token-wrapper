{
    "address": "0x55aE718014609548CC2e935CBfd8306988084959",
    "abi": [
      {
        "inputs": [],
        "name": "L2TokenVault__InsufficientAmount",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "L2TokenVault__InsufficientFees",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "L2TokenVault__InsufficientFunds",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "L2TokenVault__NonceAlreadyProcessed",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "L2TokenVault__TransferFailed",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "L2TokenVault__ZeroAddress",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "depositor",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          }
        ],
        "name": "Deposit",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getFees",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "nonce",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "otherChainNonce",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "withdrawFees",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive"
      }
    ],
    "transactionHash": "0xea804996fa12223e9d8126db2f6eb661d3b5b37a42c5158834b2191efe9fdab3",
    "receipt": {
      "to": null,
      "from": "0x7a82bbfD10E3Ce5817dEcC0ee870e17D6853D901",
      "contractAddress": "0x55aE718014609548CC2e935CBfd8306988084959",
      "transactionIndex": 5,
      "gasUsed": "840069",
      "logsBloom": "0x00000000000000020000000000000000000000000000000000800000000000000000000000001000000000000000000000008000000000000000000000000000000000000000000000000000001000800001000000000000000100000000000000008000020000000000000000000800000008000000000080000000000000400000000000000000000000000000000000000000000000000000000000000000200000000000000020000000000000000001000000000000000000000000004000000000000000000001000000008000000000040000000000100000000020000000000000000000000000000000000000000000000000000000000000100000",
      "blockHash": "0x91aa53199c96cc87d1267dff7e445b764afdeff96a5051ca607d2ef22d4bb99e",
      "transactionHash": "0xea804996fa12223e9d8126db2f6eb661d3b5b37a42c5158834b2191efe9fdab3",
      "logs": [
        {
          "transactionIndex": 5,
          "blockNumber": 36155332,
          "transactionHash": "0xea804996fa12223e9d8126db2f6eb661d3b5b37a42c5158834b2191efe9fdab3",
          "address": "0x55aE718014609548CC2e935CBfd8306988084959",
          "topics": [
            "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000007a82bbfd10e3ce5817decc0ee870e17d6853d901"
          ],
          "data": "0x",
          "logIndex": 19,
          "blockHash": "0x91aa53199c96cc87d1267dff7e445b764afdeff96a5051ca607d2ef22d4bb99e"
        },
        {
          "transactionIndex": 5,
          "blockNumber": 36155332,
          "transactionHash": "0xea804996fa12223e9d8126db2f6eb661d3b5b37a42c5158834b2191efe9fdab3",
          "address": "0x0000000000000000000000000000000000001010",
          "topics": [
            "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
            "0x0000000000000000000000000000000000000000000000000000000000001010",
            "0x0000000000000000000000007a82bbfd10e3ce5817decc0ee870e17d6853d901",
            "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
          ],
          "data": "0x00000000000000000000000000000000000000000000000000073ccafb74a6860000000000000000000000000000000000000000000000000dd8e1919e01f200000000000000000000000000000000000000000000001f8d5efc2af8a1a9c56e0000000000000000000000000000000000000000000000000dd1a4c6a28d4b7a000000000000000000000000000000000000000000001f8d5f0367c39d1e6bf4",
          "logIndex": 20,
          "blockHash": "0x91aa53199c96cc87d1267dff7e445b764afdeff96a5051ca607d2ef22d4bb99e"
        }
      ],
      "blockNumber": 36155332,
      "cumulativeGasUsed": "3437632",
      "status": 1,
      "byzantium": true
    },
    "args": [],
    "numDeployments": 1,
    "solcInputHash": "5aceb542bfb26d20b6d81d4e3b80ce45",
    "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"L2TokenVault__InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__InsufficientFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__NonceAlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"L2TokenVault__ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"otherChainNonce\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/layer-2/L2TokenVault.sol\":\"L2TokenVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/layer-2/L2TokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nerror L2TokenVault__TransferFailed();\\nerror L2TokenVault__ZeroAddress();\\nerror L2TokenVault__InsufficientFunds();\\nerror L2TokenVault__InsufficientAmount();\\nerror L2TokenVault__InsufficientFees();\\nerror L2TokenVault__NonceAlreadyProcessed();\\n\\ncontract L2TokenVault is Ownable {\\n  event Transfer(address to, uint256 amount);\\n  event Deposit(address depositor, uint256 amount, uint256 nonce);\\n\\n  uint256 private constant DEPOSIT_FEE = 0.01 ether;\\n  uint256 private s_fees;\\n  uint256 public nonce;\\n\\n  mapping(address owner => uint256 amount) private s_balances;\\n  mapping(address owner => mapping(uint256 nonce => bool)) private s_processedNonce;\\n\\n  function transfer(address to, uint256 amount, uint256 otherChainNonce) public onlyOwner {\\n    if (to == address(0)) revert L2TokenVault__ZeroAddress();\\n    if (s_processedNonce[to][otherChainNonce]) revert L2TokenVault__NonceAlreadyProcessed();\\n\\n    s_processedNonce[to][otherChainNonce] = true;\\n\\n    uint256 toBalance = s_balances[to];\\n\\n    if (toBalance < amount) revert L2TokenVault__InsufficientFunds();\\n\\n    unchecked {\\n      s_balances[to] = toBalance - amount;\\n    }\\n\\n    (bool success, ) = payable(to).call{value: amount}(\\\"\\\");\\n    if (!success) revert L2TokenVault__TransferFailed();\\n\\n    emit Transfer(to, amount);\\n  }\\n\\n  function withdrawFees() public {\\n    uint256 fees = s_fees;\\n\\n    if (fees == 0) revert L2TokenVault__InsufficientFees();\\n\\n    s_fees = 0;\\n\\n    address owner = owner();\\n\\n    (bool success, ) = owner.call{value: fees}(\\\"\\\");\\n    if (!success) revert L2TokenVault__TransferFailed();\\n\\n    emit Transfer(owner, fees);\\n  }\\n\\n  function balanceOf(address owner) public view returns (uint256) {\\n    return s_balances[owner];\\n  }\\n\\n  function getFees() public view returns (uint256) {\\n    return s_fees;\\n  }\\n\\n  receive() external payable {\\n    if (msg.value <= DEPOSIT_FEE) revert L2TokenVault__InsufficientAmount();\\n\\n    uint256 amount = msg.value - DEPOSIT_FEE;\\n\\n    s_fees += DEPOSIT_FEE;\\n    s_balances[msg.sender] += amount;\\n\\n    nonce++;\\n\\n    emit Deposit(msg.sender, amount, nonce);\\n  }\\n}\\n\",\"keccak256\":\"0x692c2f0f986bed256755392aac2ddc1e117ad4f7adcf691127fe4949e8b5e9da\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610dce8061010d6000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610241578063affed0e01461026c578063db8d55f114610297578063f2fde38b146102c2576101a8565b8063095bcdb6146101ad578063476343ee146101d657806370a08231146101ed578063715018a61461022a576101a8565b366101a857662386f26fc1000034116100c4576040517f07b77cf400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000662386f26fc10000346100d991906109d0565b9050662386f26fc10000600160008282546100f49190610a04565b9250508190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461014a9190610a04565b925050819055506002600081548092919061016490610a38565b91905055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15338260025460405161019e93929190610ad0565b60405180910390a1005b600080fd5b3480156101b957600080fd5b506101d460048036038101906101cf9190610b64565b6102eb565b005b3480156101e257600080fd5b506101eb6105fe565b005b3480156101f957600080fd5b50610214600480360381019061020f9190610bb7565b610734565b6040516102219190610be4565b60405180910390f35b34801561023657600080fd5b5061023f61077d565b005b34801561024d57600080fd5b50610256610791565b6040516102639190610bff565b60405180910390f35b34801561027857600080fd5b506102816107ba565b60405161028e9190610be4565b60405180910390f35b3480156102a357600080fd5b506102ac6107c0565b6040516102b99190610be4565b60405180910390f35b3480156102ce57600080fd5b506102e960048036038101906102e49190610bb7565b6107ca565b005b6102f361084d565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610359576040517febca8e3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156103ee576040517f31f65bbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104d5576040517f2e98d2c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828103600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008473ffffffffffffffffffffffffffffffffffffffff168460405161054190610c4b565b60006040518083038185875af1925050503d806000811461057e576040519150601f19603f3d011682016040523d82523d6000602084013e610583565b606091505b50509050806105be576040517ffd29b19b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de285856040516105ef929190610c60565b60405180910390a15050505050565b600060015490506000810361063f576040517fd728bc6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001819055506000610651610791565b905060008173ffffffffffffffffffffffffffffffffffffffff168360405161067990610c4b565b60006040518083038185875af1925050503d80600081146106b6576040519150601f19603f3d011682016040523d82523d6000602084013e6106bb565b606091505b50509050806106f6576040517ffd29b19b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de28284604051610727929190610c60565b60405180910390a1505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61078561084d565b61078f60006108cb565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b6000600154905090565b6107d261084d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890610d0c565b60405180910390fd5b61084a816108cb565b50565b61085561098f565b73ffffffffffffffffffffffffffffffffffffffff16610873610791565b73ffffffffffffffffffffffffffffffffffffffff16146108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c090610d78565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109db82610997565b91506109e683610997565b92508282039050818111156109fe576109fd6109a1565b5b92915050565b6000610a0f82610997565b9150610a1a83610997565b9250828201905080821115610a3257610a316109a1565b5b92915050565b6000610a4382610997565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a7557610a746109a1565b5b600182019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aab82610a80565b9050919050565b610abb81610aa0565b82525050565b610aca81610997565b82525050565b6000606082019050610ae56000830186610ab2565b610af26020830185610ac1565b610aff6040830184610ac1565b949350505050565b600080fd5b610b1581610aa0565b8114610b2057600080fd5b50565b600081359050610b3281610b0c565b92915050565b610b4181610997565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b600080600060608486031215610b7d57610b7c610b07565b5b6000610b8b86828701610b23565b9350506020610b9c86828701610b4f565b9250506040610bad86828701610b4f565b9150509250925092565b600060208284031215610bcd57610bcc610b07565b5b6000610bdb84828501610b23565b91505092915050565b6000602082019050610bf96000830184610ac1565b92915050565b6000602082019050610c146000830184610ab2565b92915050565b600081905092915050565b50565b6000610c35600083610c1a565b9150610c4082610c25565b600082019050919050565b6000610c5682610c28565b9150819050919050565b6000604082019050610c756000830185610ab2565b610c826020830184610ac1565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610cf6602683610c89565b9150610d0182610c9a565b604082019050919050565b60006020820190508181036000830152610d2581610ce9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d62602083610c89565b9150610d6d82610d2c565b602082019050919050565b60006020820190508181036000830152610d9181610d55565b905091905056fea2646970667358221220e60dea05b58d833b465efe56d02e8102f57e6e0fbaabb39fc2afa5f6a1a62b4464736f6c63430008120033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610241578063affed0e01461026c578063db8d55f114610297578063f2fde38b146102c2576101a8565b8063095bcdb6146101ad578063476343ee146101d657806370a08231146101ed578063715018a61461022a576101a8565b366101a857662386f26fc1000034116100c4576040517f07b77cf400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000662386f26fc10000346100d991906109d0565b9050662386f26fc10000600160008282546100f49190610a04565b9250508190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461014a9190610a04565b925050819055506002600081548092919061016490610a38565b91905055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15338260025460405161019e93929190610ad0565b60405180910390a1005b600080fd5b3480156101b957600080fd5b506101d460048036038101906101cf9190610b64565b6102eb565b005b3480156101e257600080fd5b506101eb6105fe565b005b3480156101f957600080fd5b50610214600480360381019061020f9190610bb7565b610734565b6040516102219190610be4565b60405180910390f35b34801561023657600080fd5b5061023f61077d565b005b34801561024d57600080fd5b50610256610791565b6040516102639190610bff565b60405180910390f35b34801561027857600080fd5b506102816107ba565b60405161028e9190610be4565b60405180910390f35b3480156102a357600080fd5b506102ac6107c0565b6040516102b99190610be4565b60405180910390f35b3480156102ce57600080fd5b506102e960048036038101906102e49190610bb7565b6107ca565b005b6102f361084d565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610359576040517febca8e3600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156103ee576040517f31f65bbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104d5576040517f2e98d2c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828103600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008473ffffffffffffffffffffffffffffffffffffffff168460405161054190610c4b565b60006040518083038185875af1925050503d806000811461057e576040519150601f19603f3d011682016040523d82523d6000602084013e610583565b606091505b50509050806105be576040517ffd29b19b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de285856040516105ef929190610c60565b60405180910390a15050505050565b600060015490506000810361063f576040517fd728bc6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001819055506000610651610791565b905060008173ffffffffffffffffffffffffffffffffffffffff168360405161067990610c4b565b60006040518083038185875af1925050503d80600081146106b6576040519150601f19603f3d011682016040523d82523d6000602084013e6106bb565b606091505b50509050806106f6576040517ffd29b19b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de28284604051610727929190610c60565b60405180910390a1505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61078561084d565b61078f60006108cb565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b6000600154905090565b6107d261084d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890610d0c565b60405180910390fd5b61084a816108cb565b50565b61085561098f565b73ffffffffffffffffffffffffffffffffffffffff16610873610791565b73ffffffffffffffffffffffffffffffffffffffff16146108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c090610d78565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109db82610997565b91506109e683610997565b92508282039050818111156109fe576109fd6109a1565b5b92915050565b6000610a0f82610997565b9150610a1a83610997565b9250828201905080821115610a3257610a316109a1565b5b92915050565b6000610a4382610997565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a7557610a746109a1565b5b600182019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aab82610a80565b9050919050565b610abb81610aa0565b82525050565b610aca81610997565b82525050565b6000606082019050610ae56000830186610ab2565b610af26020830185610ac1565b610aff6040830184610ac1565b949350505050565b600080fd5b610b1581610aa0565b8114610b2057600080fd5b50565b600081359050610b3281610b0c565b92915050565b610b4181610997565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b600080600060608486031215610b7d57610b7c610b07565b5b6000610b8b86828701610b23565b9350506020610b9c86828701610b4f565b9250506040610bad86828701610b4f565b9150509250925092565b600060208284031215610bcd57610bcc610b07565b5b6000610bdb84828501610b23565b91505092915050565b6000602082019050610bf96000830184610ac1565b92915050565b6000602082019050610c146000830184610ab2565b92915050565b600081905092915050565b50565b6000610c35600083610c1a565b9150610c4082610c25565b600082019050919050565b6000610c5682610c28565b9150819050919050565b6000604082019050610c756000830185610ab2565b610c826020830184610ac1565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610cf6602683610c89565b9150610d0182610c9a565b604082019050919050565b60006020820190508181036000830152610d2581610ce9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d62602083610c89565b9150610d6d82610d2c565b602082019050919050565b60006020820190508181036000830152610d9181610d55565b905091905056fea2646970667358221220e60dea05b58d833b465efe56d02e8102f57e6e0fbaabb39fc2afa5f6a1a62b4464736f6c63430008120033",
    "devdoc": {
      "kind": "dev",
      "methods": {
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    },
    "storageLayout": {
      "storage": [
        {
          "astId": 7,
          "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
          "label": "_owner",
          "offset": 0,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 2102,
          "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
          "label": "s_fees",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        },
        {
          "astId": 2104,
          "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
          "label": "nonce",
          "offset": 0,
          "slot": "2",
          "type": "t_uint256"
        },
        {
          "astId": 2108,
          "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
          "label": "s_balances",
          "offset": 0,
          "slot": "3",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
          "astId": 2114,
          "contract": "contracts/layer-2/L2TokenVault.sol:L2TokenVault",
          "label": "s_processedNonce",
          "offset": 0,
          "slot": "4",
          "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => mapping(uint256 => bool))",
          "numberOfBytes": "32",
          "value": "t_mapping(t_uint256,t_bool)"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_mapping(t_uint256,t_bool)": {
          "encoding": "mapping",
          "key": "t_uint256",
          "label": "mapping(uint256 => bool)",
          "numberOfBytes": "32",
          "value": "t_bool"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    }
  }